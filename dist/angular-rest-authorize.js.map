{"version":3,"sources":["angular-rest-authorize.js"],"names":[],"mappings":"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","file":"angular-rest-authorize.js","sourcesContent":["'use strict';\n\n/**\n  * @ngdoc overview\n  * @name angularRestAuthorize\n  * @description\n  * Sets up client-side session persistance and authorization. By default it follows\n  * REST conventions for creating and obtaining a session, but it exposes it's lifecycle method\n  * to override this behaviour\n */\nangular.module('angularRestAuthorize', ['angularSyncLocalStorage']).constant('AUTH_EVENTS', {\n  loginSuccess: 'auth-login-success',\n  loginFailed: 'auth-login-failed',\n  logoutSuccess: 'auth-logout-success',\n  sessionTimeout: 'auth-session-timeout',\n  notAuthenticated: 'auth-not-authenticated',\n  notAuthorized: 'auth-not-authorized',\n  userChanged: 'auth-user-changed'\n}).constant('USER_ROLES', {\n  all: '*',\n  user: 'user',\n  admin: 'admin'\n}).config(function($httpProvider) {\n  return $httpProvider.interceptors.push(function($injector) {\n    return $injector.get('AuthInterceptor');\n  });\n}).factory('userSession', function($rootScope) {\n  return {\n    store: {},\n    create: function(sessionId, userId, userRole) {\n      this._cachedUserId = userId;\n      this.store.id = sessionId;\n      this.store.userId = this._cachedUserId;\n      return this.store.userRole = userRole;\n    },\n    destroy: function() {\n      this.store.id = null;\n      this._cachedUserId = this.store.userId = null;\n      return this.store.userRole = null;\n    }\n  };\n}).factory('AuthInterceptor', function($rootScope, $q, AUTH_EVENTS) {\n  return {\n    responseError: function(response) {\n      var code, codeMap;\n      codeMap = {\n        401: AUTH_EVENTS.notAuthenticated,\n        403: AUTH_EVENTS.notAuthorized,\n        405: AUTH_EVENTS.notAuthenticated,\n        419: AUTH_EVENTS.sessionTimeout,\n        440: AUTH_EVENTS.sessionTimeout\n      };\n      code = codeMap[response.status];\n      if (code) {\n        $rootScope.$broadcast(code, response);\n      }\n      return $q.reject(response);\n    }\n  };\n}).provider('AuthService', function() {\n  var AuthServiceProvider, Session;\n  Session = null;\n  AuthServiceProvider = this;\n  this.resourceUrl = '/api/login';\n  this.localStorageKey = 'auth-service-session';\n  this.$get = function($q, $http, $resource, $rootScope, userSession, AUTH_EVENTS, synchronizedLocalStorage) {\n    var LOCAL_STORAGE_PROP, loggedOutEvents;\n    Session = $resource(AuthServiceProvider.resourceUrl);\n    LOCAL_STORAGE_PROP = AuthServiceProvider.localStorageKey;\n    loggedOutEvents = [AUTH_EVENTS.notAuthorized, AUTH_EVENTS.notAuthenticated, AUTH_EVENTS.sessionTimeout, AUTH_EVENTS.logoutSuccess];\n    _.each(loggedOutEvents, function(authEvent) {\n      return $rootScope.$on(authEvent, function() {\n        return userSession.destroy();\n      });\n    });\n    return {\n      calls: {\n        retain: function() {\n          return Session.get().$promise;\n        },\n        login: function(credentials) {\n          return Session.save(credentials).$promise;\n        },\n        logout: function() {\n          return Session[\"delete\"]().$promise;\n        }\n      },\n      load: function(sessionContainer) {\n        userSession.store = sessionContainer;\n        synchronizedLocalStorage.synchronize(sessionContainer, AuthServiceProvider.localStorageKey, false);\n        $rootScope.$on('sls:updated', this.query.bind(this));\n        return this.retain();\n      },\n      loginPromise: null,\n      retain: function() {\n        return this.loginPromise = this.calls.retain().then((function(_this) {\n          return function(session) {\n            userSession.create(session.token, session.id, 'user');\n            userSession._cachedUserId = userSession.store.userId;\n            window.localStorage[AuthServiceProvider.localStorageKey] = angular.toJson(userSession.store);\n            $rootScope.$broadcast('AuthService:load', session);\n            return session;\n          };\n        })(this));\n      },\n      logout: function() {\n        return this.calls.logout().then((function(_this) {\n          return function(response) {\n            _this.loginPromise = _this.loginPromise.then(function() {\n              return $q.reject('user has logged out');\n            });\n            $rootScope.$broadcast(AUTH_EVENTS.logoutSuccess);\n            return response;\n          };\n        })(this));\n      },\n      login: function(credentials) {\n        return this.loginPromise = this.calls.login(credentials).then(function(session) {\n          userSession.create(session.token, session.id, 'user');\n          if (!userSession._cachedUserId) {\n            userSession._cachedUserId = userSession.store.userId;\n            window.localStorage[AuthServiceProvider.localStorageKey] = angular.toJson(userSession.store);\n          }\n          $rootScope.$broadcast('AuthService:load', session);\n          $rootScope.$broadcast(AUTH_EVENTS.loginSuccess, session);\n          return session;\n        })[\"catch\"](function() {\n          $rootScope.$broadcast(AUTH_EVENTS.loginFailed);\n          return $q.reject.apply($q, arguments);\n        });\n      },\n      isAuthenticated: function() {\n        return !!userSession.store.userId;\n      },\n      isAuthorized: function(authorizedRoles) {\n        return this.isAuthenticated() && authorizedRoles.indexOf(userSession.store.userRole) !== -1;\n      },\n      query: function() {\n        var isAuthenticated, sessionEvent;\n        isAuthenticated = this.isAuthenticated();\n        sessionEvent = (function(storageId, sessionId) {\n          if (storageId) {\n            if (!sessionId) {\n              return AUTH_EVENTS.loginSuccess;\n            }\n            if (storageId !== sessionId) {\n              return AUTH_EVENTS.userChanged;\n            }\n          }\n          if (!storageId && sessionId) {\n            return AUTH_EVENTS.sessionTimeout;\n          }\n        })(userSession.store.userId, userSession._cachedUserId);\n        userSession._cachedUserId = userSession.store.userId;\n        if (sessionEvent === AUTH_EVENTS.userChanged || sessionEvent === AUTH_EVENTS.loginSuccess) {\n          return this.retain().then(function() {\n            return $rootScope.$broadcast(sessionEvent);\n          });\n        }\n        if (sessionEvent) {\n          return $rootScope.$broadcast(sessionEvent);\n        }\n      }\n    };\n  };\n});\n\n// ---\n// generated by coffee-script 1.9.0"],"sourceRoot":"/source/"}